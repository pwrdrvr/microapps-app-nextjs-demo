# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax reference:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: Deploy - QA

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # This is used by the SharedProps to detect a PR build
  PR_NUMBER: ${{ github.event.pull_request.number }}
  AWS_REGION: us-east-2
  APP_NAME: nextjs-demo
  ENV: qa
  DEPLOYER_LAMBDA_NAME: microapps-deployer-qa
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID_QA }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_QA }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_QA }}
  CDK_CONTEXT_ARGS: "--context @pwrdrvr/microapps:tableName=microapps-qa --context @pwrdrvr/microapps:s3BucketName=com.pwrdrvr-microapps-qa"

jobs:
  build:
    if: startsWith( github.ref, 'refs/tags/qa/')

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Node Modules
        run: npm ci

      - name: Install CDK Node Modules
        working-directory: cdk/
        run: npm ci

      - name: Build CDK TypeScript
        working-directory: cdk/
        run: |
          npm run build --if-present

      - name: Apply Version from Git Tag
        run: |
          npm version from-git --no-git-tag-version

      - name: Extract Current NPM Version
        run: |
          echo 'PACKAGE_VERSION='$(node -p -e "require('./package.json').version") >> $GITHUB_ENV

      - name: Preflight Check Version
        run: |
          npx microapps-publish preflight -a ${APP_NAME} -n ${PACKAGE_VERSION} -d ${DEPLOYER_LAMBDA_NAME}

      - name: Apply Next.js Version
        run: |
          npx microapps-publish nextjs-version -n ${PACKAGE_VERSION}

      - name: Build Serverless Next.js
        run: |
          npx serverless

      - name: Copy in Serverless-NextJS-Router
        run: |
          npm run copy-router

      - name: Smoke Check CDK
        run: npx cdk list

      - name: Deploy CDK Stack
        run: npx cdk deploy ${CDK_CONTEXT_ARGS} --require-approval never app

      - name: Publish App to MicroApps
        run: |
          npx microapps-publish publish -a ${APP_NAME} -n ${PACKAGE_VERSION} -d ${DEPLOYER_LAMBDA_NAME} -l microapps-app-${APP_NAME}-${ENV}
