# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax reference:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: CI

on:
  # Deploys with overwrite as current package.json version to main deploy
  # New versions are deployed with `deploy` build
  push:
    branches: [ main ]
    paths:
      - '**'
      - '!**/README.md'
  pull_request:
    branches: [ main ]
    paths:
      - '**'
      - '!**/README.md'

env:
  # This is used by the SharedProps to detect a PR build
  PR_NUMBER: ${{ github.event.pull_request.number }}
  APP_NAME: nextjs-demo
  APP_CONSTRUCT_FOLDER_NAME: microapps-app-nextjs-demo
  APP_PACKAGE_NAME: '@pwrdrvr/microapps-app-nextjs-demo'
  ENV: prod
  DEPLOYER_LAMBDA_NAME: microapps-core-ghpublic-deployer-prod
  AWS_REGION: us-east-2

jobs:
  version:
    uses: ./.github/workflows/r_version.yml
    with:
      APP_PACKAGE_NAME: '@pwrdrvr/microapps-app-nextjs-demo'

  build:
    needs:
      - version
    uses: ./.github/workflows/r_build-app.yml
    with:
      APP_NAME: nextjs-demo
      APP_PACKAGE_NAME: '@pwrdrvr/microapps-app-nextjs-demo'
      APP_CONSTRUCT_FOLDER_NAME: microapps-app-nextjs-demo
      packageVersion: ${{ needs.version.outputs.packageVersion }}
      prSuffix: ${{ needs.version.outputs.prSuffix }}

  deploy-ghpublic:
    needs:
      - version
      - build
    concurrency:
      group: deploy-app-${{ github.workflow }}-${{ (github.event_name == 'pull_request' && github.event.pull_request.number) || github.head_ref }}
      cancel-in-progress: false
    permissions:
      contents: read
      id-token: write
      statuses: write
    runs-on: ubuntu-latest
    environment:
      name: ghpublic
      url: https://apps.ghpublic.pwrdrvr.com/${{ env.APP_NAME }}?appver=${{ needs.version.outputs.packageVersion }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # https://www.jonathan-wilkinson.com/github-actions-cache-everything
      - name: Cache Node Modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            packages/**/node_modules
          key: node-modules-${{ hashFiles('package.json', '**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      # Fixes errors due to JSII tsconfig.json not ignoring libs
      # node_modules/flatpickr/dist/types/instance.d.ts(37,21): error TS2304: Cannot find name 'Node'.
      # Error: node_modules/flatpickr/dist/types/instance.d.ts(82,56): error TS2304: Cannot find name 'HTMLElementTagNameMap'.
      # Error: node_modules/@types/carbon-components-react/lib/components/FileUploader/FileUploaderDropContainer.d.ts(46,80): error TS2304: Cannot find name 'File'.
      # Error: node_modules/@types/overlayscrollbars/index.d.ts(348,19): error TS2304: Cannot find name 'NodeListOf'.
      - name: Modify cdk-construct tsconfig.json
        run: |
          mv ./packages/cdk-construct/tsconfig.json ./packages/cdk-construct/tsconfig.jsii.json
          jq ".compilerOptions += { \"skipLibCheck\": true }" ./packages/cdk-construct/tsconfig.jsii.json > ./packages/cdk-construct/tsconfig.json

      - name: Build All TypeScript
        run: npm run build

      - name: Download Artifact - App
        uses: actions/download-artifact@v3
        with:
          name: app_zip
          path: packages/cdk-construct/lib/

      - name: Unzip Artifact - App
        working-directory: packages/cdk-construct/lib/
        run: unzip -o nextjs.zip

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-session-name: microapps-app-${{ env.APP_NAME }}-build
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/builder-writeRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Preflight Check Version - App
        run: |
          npx microapps-publish preflight -a ${APP_NAME} \
            -n ${{ needs.version.outputs.packageVersion }} -d ${DEPLOYER_LAMBDA_NAME} --overwrite

      - name: Set Hotswap Flag
        run: |
          if [ -n "${PR_NUMBER}" ]; then
            echo "HOTSWAP_FLAG=--hotswap" >> $GITHUB_ENV
          else
            echo "HOTSWAP_FLAG=" >> $GITHUB_ENV
          fi

      - name: Deploy CDK Stack - App
        run: |
          npx cdk deploy ${HOTSWAP_FLAG} \
            --require-approval never app

      - name: Publish to MicroApps - App
        run: |
          npx microapps-publish publish -a ${APP_NAME} \
            -t lambda-url \
            --startup-type direct \
            -n ${{ needs.version.outputs.packageVersion }} \
            -d ${DEPLOYER_LAMBDA_NAME} \
            -l microapps-app-${APP_NAME}-${ENV}${{ needs.version.outputs.prSuffix }} \
            -s packages/cdk-construct/lib/${APP_CONSTRUCT_FOLDER_NAME}/.static_files \
            --overwrite --noCache

      - name: App URL
        uses: Sibz/github-status-action@v1
        with: 
          authToken: ${{secrets.GITHUB_TOKEN}}
          context: 'App URL'
          description: 'Passed'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}
          target_url: https://apps.ghpublic.pwrdrvr.com/${{ env.APP_NAME }}?appver=${{ needs.version.outputs.packageVersion }}

      - name: Test Nextjs Demo App
        run: |
          echo Testing App Loading
          curl -H"accept: text/html" --fail https://apps.ghpublic.pwrdrvr.com/${{ env.APP_NAME }}?appver=${{ needs.version.outputs.packageVersion }}
          echo Testing Post Page Loading
          curl -H"accept: text/html" --fail https://apps.ghpublic.pwrdrvr.com/${{ env.APP_NAME }}/posts/pre-rendering?appver=${{ needs.version.outputs.packageVersion }}
